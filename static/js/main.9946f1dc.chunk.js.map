{"version":3,"sources":["image/not-found.jpg","layout/Header/index.js","hooks/useSearchLocation.js","services/settings.js","components/Search.js","components/Maps.js","components/Weather.js","components/NotFound.js","components/Screen.js","pages/index.js","App.js","index.js"],"names":["module","exports","Header","className","htmlFor","useSearchLocation","initialValue","setResponse","searchRef","useRef","useState","keyword","setKeyword","bindReset","onClick","e","preventDefault","current","value","bindSearch","trim","useEffect","a","url","fetch","response","json","result","hanleAPIRequest","Screen","propTypes","PropTypes","func","isRequired","React","memo","searchLocation","reset","type","placeholder","ref","coord","lat","lon","Map","center","zoom","TileLayer","attribution","Marker","position","object","values","name","main","parseFloat","temp","toFixed","temp_max","temp_min","pressure","humidity","href","target","rel","NotFound","src","notFounded","alt","Object","keys","length","cod","Searcher","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,uC,0MCM5B,SAASC,IACrB,OACG,4BAAQC,UAAU,kCACf,2BAAOC,QAAQ,GAAGD,UAAU,SAA5B,2C,oDCiDME,MArDf,SAA2BC,EAAcC,GAEtC,IAAMC,EAAYC,iBAAO,MAF0B,EAIrBC,mBAASJ,GAJY,mBAI5CK,EAJ4C,KAInCC,EAJmC,KAMhDC,EAAY,CAETC,QAAS,SAAAC,GAENA,EAAEC,iBAEFR,EAAUS,QAAQC,MAAQ,GAE1BN,EAAW,MAIjBO,EAAa,CAEVL,QAAS,SAAAC,GAENA,EAAEC,iBAEqC,KAAnCR,EAAUS,QAAQC,MAAME,QAEzBR,EAAWJ,EAAUS,QAAQC,SAwBzC,OApBAG,qBAAU,WAES,KAAZV,EAEoB,uCAAG,gCAAAW,EAAA,6DAEfC,EAFe,UCvCN,kDDuCM,cAEWZ,EAFX,kBCrCN,oCDqCM,SAGEa,MAAMD,GAHR,cAGfE,EAHe,gBAIAA,EAASC,OAJT,OAIfC,EAJe,OAMrBpB,EAAYoB,GANS,2CAAH,oDASrBC,GAGArB,EAAY,MAEf,CAACI,EAASJ,IAEN,CAACC,EAAWW,EAAYN,IEvBlCgB,OAAOC,UAAY,CAChBvB,YAAawB,IAAUC,KAAKC,YAIhBC,UAAMC,MA9BrB,YAAgC,IAAf5B,EAAc,EAAdA,YAAc,EAEeF,EAAkB,GAAIE,GAFrC,mBAErBC,EAFqB,KAEV4B,EAFU,KAEMC,EAFN,KAI5B,OACG,0BAAMlC,UAAU,2BACb,2BACGmC,KAAK,OACLnC,UAAU,kEACVoC,YAAY,iBACZC,IAAKhC,IAER,0CACGL,UAAU,yDACNiC,GAFP,UAIA,0CACGjC,UAAU,gDACNkC,GAFP,a,gCCKMH,UAAMC,MArBrB,YAAwB,IAATM,EAAQ,EAARA,MAEJC,EAAaD,EAAbC,IAAKC,EAAQF,EAARE,IAEb,OACG,kBAACC,EAAA,EAAD,CAAKC,OAAQ,CAACH,EAAKC,GAAMG,KAAM,IAC5B,kBAACC,EAAA,EAAD,CACGC,YAAY,0EACZzB,IAAI,uDAEP,kBAAC0B,EAAA,EAAD,CAAQC,SAAU,CAACR,EAAKC,SC2BjCd,OAAOC,UAAY,CAChBvB,YAAawB,IAAUoB,OAAOlB,YAIlBC,UAAMC,MA5CrB,YAA4B,IAAViB,EAAS,EAATA,OAEPC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KAEd,OACG,2BAAOnD,UAAU,iCACd,2BAAOC,QAAQ,GAAGD,UAAU,yBAA5B,kBAAoEkD,EAApE,YACA,uBAAGlD,UAAU,4BACV,2BAAOA,UAAU,cAAcC,QAAQ,IAAImD,WAAWD,EAAKE,KAAO,OAAQ,IAAIC,QAAQ,GAAtF,YAEH,uBAAGtD,UAAU,4BACV,2BAAOC,QAAQ,GAAGD,UAAU,aAA5B,SACA,2BAAOA,UAAU,WAAWC,QAAQ,IAAImD,WAAWD,EAAKI,SAAW,OAAQ,IAAID,QAAQ,GAAvF,WACA,2BAAOrD,QAAQ,GAAGD,UAAU,aAA5B,SACA,2BAAOC,QAAQ,IAAImD,WAAWD,EAAKK,SAAW,OAAQ,IAAIF,QAAQ,GAAlE,YAEH,uBAAGtD,UAAU,iBAAb,0BACA,2BACG,2BAAOC,QAAQ,GAAGD,UAAU,aAA5B,cACA,2BAAOC,QAAQ,IAAIkD,EAAKM,SAAxB,SAEH,2BACG,2BAAOxD,QAAQ,GAAGD,UAAU,aAA5B,cACA,2BAAOC,QAAQ,IAAIkD,EAAKO,SAAxB,OAEH,uBAAG1D,UAAU,8BACV,2BAAOC,QAAQ,GAAGD,UAAU,aAA5B,UACA,uBACGA,UAAU,OACV2D,KAAK,8BACLC,OAAO,SACPC,IAAI,uBAJP,sBAKA,2BAAO5D,QAAQ,GAAGD,UAAU,aAA5B,6B,iBChCG,SAAS8D,IACrB,OACG,yBAAK9D,UAAU,eACZ,yBAAKA,UAAU,aAAa+D,IAAMC,IAAaC,IAAI,KACnD,6DCyBMlC,UAAMC,MA1BrB,YAA6B,IAAZV,EAAW,EAAXA,SAGd,OAAqC,IAAjC4C,OAAOC,KAAK7C,GAAU8C,OAAqB,KAE1B,MAAjB9C,EAAS+C,IAAoB,kBAACP,EAAD,MAG9B,6BAAS9D,UAAU,uBAChB,kBAAC,EAAD,CACGsC,MAAOhB,EAASgB,QAEnB,kBAAC,EAAD,CACGW,OAAQ3B,QCZL,SAASgD,IAAW,MAEA/D,mBAAS,IAFT,mBAEzBe,EAFyB,KAEflB,EAFe,KAIhC,OACG,0BAAMJ,UAAU,oDACb,kBAAC,EAAD,CACGI,YAAaA,IAEhB,kBAAC,EAAD,CAAQkB,SAAUA,KCbZ,SAASiD,IACrB,OACG,oCAEG,kBAACxE,EAAD,MAEA,kBAACuE,EAAD,O,YCHTE,IAASC,OACN,kBAAC,IAAMC,WAAP,KACG,kBAACH,EAAD,OAEHI,SAASC,eAAe,W","file":"static/js/main.9946f1dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not-found.a7b0cdeb.jpg\";","// Importando referencias de react.\r\nimport React from \"react\";\r\n// Impostando estilos.\r\nimport \"styles/header.css\";\r\n\r\n// Inicializando react functional component.\r\nexport default function Header() {\r\n   return (\r\n      <header className=\"box-container flex flex-center\">\r\n         <label htmlFor=\"\" className=\"title\">React Weather Forecast by H Enterprise</label>\r\n      </header>\r\n   );\r\n}\r\n","// Importando librerias de React.\r\nimport { useState, useRef, useEffect } from \"react\";\r\n// Importando valores externos.\r\nimport { WEATHER_KEY, WEATHER_URL } from \"services/settings\";\r\n// Inicializando funcion.\r\nfunction useSearchLocation(initialValue, setResponse) {\r\n   //\r\n   const searchRef = useRef(null);\r\n   //\r\n   const [keyword, setKeyword] = useState(initialValue),\r\n      // Reseteando el valor incial.\r\n      bindReset = {\r\n         //\r\n         onClick: e => {\r\n            // Limpiamos los valores.\r\n            e.preventDefault();\r\n            /// Limpiando valor.\r\n            searchRef.current.value = \"\";\r\n            // Evento del padre para ejecutar la busqueda.\r\n            setKeyword(\"\");\r\n         }\r\n      },\r\n      // Declarando funcion para actualizar el input.\r\n      bindSearch = {\r\n         //\r\n         onClick: e => {\r\n            // Ejecutaoms la busqueda con el valor actualizado\r\n            e.preventDefault();\r\n            // Validando campo vacio antes de actualizar.\r\n            if (searchRef.current.value.trim() !== \"\") {\r\n               // Evento del padre para ejecutar la busqueda.\r\n               setKeyword(searchRef.current.value);\r\n            }\r\n         }\r\n      };\r\n   useEffect(() => {\r\n      //\r\n      if (keyword !== \"\") {\r\n         // Funcion para actualizar el keyword.\r\n         const hanleAPIRequest = async() => {\r\n            // Ejecucion de la API para obtener los valores de acuerdo a la ciudad escrita por el usuario.\r\n            const url = `${WEATHER_URL}?q=${keyword}&appid=${WEATHER_KEY}`;\r\n            const response = await fetch(url);\r\n            const result = await response.json();\r\n            // Actualizamos el estado principal.\r\n            setResponse(result);\r\n         };\r\n         // Llamado de la API.\r\n         hanleAPIRequest();\r\n      } else {\r\n         // Actualizamos el estado principal.\r\n         setResponse({});\r\n      }\r\n   }, [keyword, setResponse]);\r\n   // Restornando valores para su ejecucion.\r\n   return [searchRef, bindSearch, bindReset];\r\n}\r\n\r\nexport default useSearchLocation;\r\n","export const WEATHER_URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\n\r\nexport const WEATHER_KEY = \"e6b205d333774054ad121b8593948621\";\r\n","// Importando referencias de react.\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Importando valores externos.\r\nimport useSearchLocation from \"hooks/useSearchLocation\";\r\n\r\n// Exportando functional component.\r\nfunction Search({setResponse}) {\r\n   //\r\n   const [searchRef, searchLocation, reset] = useSearchLocation(\"\", setResponse);\r\n   //\r\n   return (\r\n      <form className=\"search flex flex-center\">\r\n         <input\r\n            type=\"text\"\r\n            className=\"app-text-field border-box pleft10 pright10 mright15 flex-grow-1\"\r\n            placeholder=\"City to search\"\r\n            ref={searchRef}\r\n         />\r\n         <button\r\n            className=\"app-button-blue no-border font12 size-100x30 mright15\"\r\n            {...searchLocation}\r\n         >Search</button>\r\n         <button\r\n            className=\"app-button-gray no-border font12 size-100x30\"\r\n            {...reset}\r\n         >Clear</button>\r\n      </form>\r\n   );\r\n}\r\n\r\n// Documentando componente.\r\nScreen.propTypes = {\r\n   setResponse: PropTypes.func.isRequired\r\n};\r\n\r\n// Exportando componente.\r\nexport default React.memo(Search);\r\n","// Importando librerias de react.\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Importando Libreria para el mapa.\r\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\r\n\r\n// Declarando componente de tipo funcion.\r\nfunction Maps({coord}) {\r\n   // Extrayendo elementos del objeto.\r\n   const { lat, lon } = coord;\r\n   // Construyendo el componente.\r\n   return (\r\n      <Map center={[lat, lon]} zoom={10}>\r\n         <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n         />\r\n         <Marker position={[lat, lon]} />\r\n      </Map>\r\n   );\r\n}\r\n\r\n// Documnetando componente.\r\nMaps.propTypes = {\r\n   coord: PropTypes.object.isRequired\r\n};\r\n\r\n// Exportando el componente.\r\nexport default React.memo(Maps);\r\n","// Importando librerias de react.\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Inicializando react functional component.\r\nfunction Weather({values}) {\r\n   // Exrayendo valores para llenar el formato.\r\n   const { name, main } = values;\r\n   // Retornando componente.\r\n   return (\r\n      <aside className=\"weather-container grid font14\">\r\n         <label htmlFor=\"\" className=\"font-bold result-name\">The weather in {name} City is</label>\r\n         <p className=\"grid-justify-self-center\">\r\n            <label className=\"font50 blue\" htmlFor=\"\">{parseFloat(main.temp - 273.15, 10).toFixed(0)} &#8451;</label>\r\n         </p>\r\n         <p className=\"grid-justify-self-center\">\r\n            <label htmlFor=\"\" className=\"font-bold\">Max: </label>\r\n            <label className=\"mright25\" htmlFor=\"\">{parseFloat(main.temp_max - 273.15, 10).toFixed(2)} &#8451;</label>\r\n            <label htmlFor=\"\" className=\"font-bold\">Min: </label>\r\n            <label htmlFor=\"\">{parseFloat(main.temp_min - 273.15, 10).toFixed(2)} &#8451;</label>\r\n         </p>\r\n         <p className=\"font-bold red\">Additional Information</p>\r\n         <p>\r\n            <label htmlFor=\"\" className=\"font-bold\">Pressure: </label>\r\n            <label htmlFor=\"\">{main.pressure} pci</label>\r\n         </p>\r\n         <p>\r\n            <label htmlFor=\"\" className=\"font-bold\">Humidity: </label>\r\n            <label htmlFor=\"\">{main.humidity} %</label>\r\n         </p>\r\n         <p className=\"font10 grid-align-self-end\">\r\n            <label htmlFor=\"\" className=\"font-bold\">Visit </label>\r\n            <a\r\n               className=\"blue\"\r\n               href=\"https://openweathermap.org/\"\r\n               target=\"_blank\"\r\n               rel=\"noopener noreferrer\">openweathermap.org</a>\r\n            <label htmlFor=\"\" className=\"font-bold\"> for mor information</label>\r\n         </p>\r\n      </aside>\r\n   );\r\n}\r\n\r\n// Documentando componente.\r\nScreen.propTypes = {\r\n   setResponse: PropTypes.object.isRequired\r\n};\r\n\r\n// Exportando componente.\r\nexport default React.memo(Weather);\r\n","//\r\nimport React from \"react\";\r\n//\r\nimport notFounded from \"image/not-found.jpg\";\r\n//\r\nexport default function NotFound() {\r\n   return (\r\n      <div className=\"text-center\">\r\n         <img className=\"full-width\" src={ notFounded } alt=\"\"/>\r\n         <h1>City not found, try again...</h1>\r\n      </div>\r\n   );\r\n}\r\n","// Importando librerias de react.\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Importando componentes a utilizar.\r\nimport Maps from \"./Maps\";\r\nimport Weather from \"./Weather\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nfunction Screen({response}) {\r\n   // Validando si el objeto esta vacio.\r\n   /* Esta condicionante se activara cuando es la primera carga o cuando se limpie el objeto */\r\n   if (Object.keys(response).length === 0) return null;\r\n   // Revisando que la repuesta sea valida.\r\n   if (response.cod !== 200) return <NotFound />;\r\n   // Mostrando componente con los resultados obtenidos de la API\r\n   return (\r\n      <section className=\"info-container grid\">\r\n         <Maps\r\n            coord={response.coord}\r\n         />\r\n         <Weather\r\n            values={response}\r\n         />\r\n      </section>\r\n   );\r\n\r\n}\r\n\r\n// Documentando componente.\r\nScreen.propTypes = {\r\n   response: PropTypes.object.isRequired\r\n};\r\n\r\n// Exportando componente.\r\nexport default React.memo(Screen);\r\n","// Importando referencias de react.\r\nimport React, { useState } from \"react\";\r\n// Importando componentes.\r\nimport Search from \"components/Search\";\r\n// Hoja de estilos.\r\nimport \"styles/searcher.css\";\r\nimport Screen from \"components/Screen\";\r\n\r\n// Inicializando react functional component.\r\nexport default function Searcher() {\r\n   // Iniciando estado para los valores del clima.\r\n   const [response, setResponse] = useState({});\r\n   // Construyendo el componente.\r\n   return (\r\n      <main className=\"searcher-grid grid mleft-auto mright-auto mtop25\">\r\n         <Search\r\n            setResponse={setResponse}\r\n         />\r\n         <Screen response={response}/>\r\n      </main>\r\n   );\r\n}\r\n","import React from \"react\";\n// Importando Paginas.\nimport Header from \"layout/Header\";\nimport Searcher from \"pages\";\n\nexport default function App() {\n   return (\n      <>\n         {/* Header section --------------------------------------------- */}\n         <Header />\n         {/* Body section ----------------------------------------------- */}\n         <Searcher />\n      </>\n   );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Componente inicial.\nimport App from \"./App\";\n// Importando estilos globales.\nimport \"styles/common/api.css\";\nimport \"styles/common/app.css\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}